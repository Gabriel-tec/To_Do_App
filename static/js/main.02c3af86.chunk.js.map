{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInputs","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yNAgDeA,MA9Cf,SAAkBC,GACd,MAA2BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAO,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAwBxB,OAtBAC,qBAAU,WACNF,EAASG,QAAQC,WAsBjB,8BACI,uBAAMC,UAAU,YAAYC,SAhBf,SAAAC,GACjBA,EAAEC,iBAEFd,EAAMY,SAAS,CACXG,GAAGC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnBC,KAAMf,IAGVC,EAAU,KAQN,UAEI,uBACIe,KAAK,OACLC,YAAY,aACZlB,MAAOC,EACPkB,KAAK,OACLX,UAAU,aACVY,SA5BK,SAAAV,GACjBR,EAAUQ,EAAEW,OAAOrB,QA4BPsB,IAAKnB,IAET,wBAAQK,UAAU,cAAlB,0B,gBCEDe,MAvCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAE5C,EAAwB7B,mBAAS,CAC7Bc,GAAG,KACHZ,MAAM,KAFV,mBAAOD,EAAP,KAAa6B,EAAb,KAaA,OAAG7B,EAAKa,GACG,cAAC,EAAD,CAAUb,KAAMA,EAAMU,SATZ,SAAAT,GACjB2B,EAAW5B,EAAKa,GAAGZ,GACnB4B,EAAQ,CACJhB,GAAG,KACHZ,MAAM,QAQPwB,EAAMK,KAAK,SAAEC,EAAOC,GAAT,OACd,sBAAKvB,UAAWsB,EAAKE,WAAa,oBAAsB,WAAxD,UAEI,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKlB,KAApD,SACKkB,EAAKd,MADAc,EAAKlB,IAGf,sBAAKJ,UAAU,QAAf,UACI,cAAC,IAAD,CACIyB,QAAS,kBAAMP,EAAWI,EAAKlB,KAC/BJ,UAAU,gBAEd,cAAC,IAAD,CACIyB,QAAS,kBAAML,EAAQ,CAAChB,GAAIkB,EAAKlB,GAAKZ,MAAO8B,EAAKd,QAClDR,UAAU,mBAZmDuB,OC4BlEG,MAjDf,WACI,MAA0BpC,mBAAS,IAAnC,mBAAO0B,EAAP,KAAcW,EAAd,KAuCA,OACI,gCACI,yDACA,cAAC,EAAD,CAAU1B,SAxCF,SAAAqB,GACZ,GAAIA,EAAKd,OAAQ,OAAOoB,KAAKN,EAAKd,MAAlC,CAIA,IAAMqB,EAAQ,CAAIP,GAAJ,mBAAaN,IAC3BW,EAASE,OAmCL,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAhBP,SAAAb,GACjB,IAAI0B,EAAed,EAAMK,KAAK,SAAAC,GAK1B,OAJGA,EAAKlB,KAAOA,IACXkB,EAAKE,YAAcF,EAAKE,YAGrBF,KAEXK,EAASG,IAQ2CZ,WAxBrC,SAAAd,GACf,IAAM2B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKlB,KAAOA,KACxDuB,EAASI,IAsBmEZ,WAhC7D,SAACc,EAAQC,GACpBA,EAAS1B,OAAQ,OAAOoB,KAAKM,EAAS1B,OAI1CmB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAK,SAAAe,GAAI,OAAKA,EAAKhC,KAAO6B,EAASC,EAAWE,eCN7DC,E,4JAVb,WACE,OACE,qBAAKrC,UAAU,WAAf,SACE,cAAC,EAAD,U,GAJUsC,IAAMC,WCCxBC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.02c3af86.chunk.js","sourcesContent":["import React , {useState, useEffect, useRef}from 'react';\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInputs] = useState(props.edit ? props.edit.value: '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    })\r\n\r\n    const handleChange = e =>{\r\n        setInputs(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id:Math.floor(Math.random() * 1000),\r\n            text: input\r\n        });\r\n\r\n        setInputs('')\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className='todo-form' onSubmit={handleSubmit}>\r\n\r\n                <input \r\n                    type='text' \r\n                    placeholder=\"Add a todo\" \r\n                    value={input}\r\n                    name=\"text\" \r\n                    className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                />\r\n                <button className=\"todo-button\">Update</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n\r\n    const [edit, setEdit] = useState({\r\n        id:null,\r\n        value:\"\"\r\n    });\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id,value)\r\n        setEdit({\r\n            id:null, \r\n            value:''\r\n        })\r\n    }\r\n\r\n    if(edit.id){\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n    }\r\n\r\n    return todos.map( ( todo , index ) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete-icon\"\r\n                />\r\n                <TiEdit\r\n                    onClick={() => setEdit({id: todo.id , value: todo.text})}\r\n                    className=\"edit-icon\"\r\n                />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React , {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo =>{\r\n        if(!todo.text || /^\\s$/.test(todo.text)){\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n        setTodos(newTodos)\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) =>{\r\n        if(!newValue.text || /^\\s$/.test(newValue.text)){\r\n            return\r\n        }\r\n\r\n        setTodos(prev => prev.map( item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n        setTodos(removeArr);\r\n    }\r\n\r\n\r\n\r\n\r\n    const completeTodo = id =>{\r\n        let updatedTodos = todos.map( todo => {\r\n            if(todo.id === id ){\r\n                todo.isComplete = !todo.isComplete\r\n                \r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Waths a plans for today</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport './App.css'\nimport TodoList from  './components/TodoList'\n\nclass App extends React.Component{\n  render(){\n    return(\n      <div className=\"todo-app\">\n        <TodoList/>\n\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}